{
    "normalization_method": ["minmax", "zscore"],
    "past_history_factor": [3.0],
    "forecast_horizon" : [24],
    "batch_size": [32, 64],
    "epochs": [200],
    "max_steps_per_epoch": [10000],
    "learning_rate": [0.001, 0.01],
    "model_params": {
        "mlp": {
            "hidden_layers": [
                [8],
                [8, 16],
                [16, 8],
                [8, 16, 32],
                [32, 16, 8],
                [8, 16, 32, 16, 8],
                [32],
                [32, 64],
                [64, 32],
                [32, 64, 128],
                [128, 64, 32],
                [32, 64, 128, 64, 32]
            ]
        },

        "lstm": {
            "layers": [1, 2, 4],
            "units": [32, 64, 128],
            "return_sequence": [true, false],
            "recurrent_dropout": [0, 0.2],
            "dense_dropout": [0, 0.2],
            "dense_layers": [
                [8, 16],
                [16, 8],
                [8, 16, 32],
                [32, 16, 8],
                [8, 16, 32, 16, 8],
                [32, 64],
                [64, 32],
                [32, 64, 128],
                [128, 64, 32],
                [32, 64, 128, 64, 32]
            ]
        },
        "tcn": {
            "nb_stacks": [1, 3],
            "nb_filters": [32, 64],
            "dilations": [[1, 2, 4, 8], [1, 2, 4, 8, 16]],
            "kernel_size": [3, 6],
            "return_sequences": [true, false],
            "tcn_dropout": [0, 0.2],
            "dense_dropout": [0, 0.2],
            "dense_layers": [
                [8, 16],
                [16, 8],
                [8, 16, 32],
                [32, 16, 8],
                [8, 16, 32, 16, 8],
                [32, 64],
                [64, 32],
                [32, 64, 128],
                [128, 64, 32],
                [32, 64, 128, 64, 32]
            ]
        },

        "xgb":{
            "booster": ["gbtree"],
            "n_stimators" : [100, 300],
            "min_child_weight": [1, 5, 10],
            "subsample": [0.5, 0.6, 0.8, 1.0],
            "colsample_bytree": [0.5, 0.6, 0.8, 1.0],
            "max_depth": [3, 4, 5, 6]

        },


        "lr":{ 
            "fit_intercept":[true, false],
            "normalize": [true, false],
            "positive":[true, false]
        },

        "rf" : {
            "n_stimators" : [100, 300],
            "max_depth" : [2, 4, 6, 8, 10],
            "min_samples_split" : [2, 4, 6, 8],
            "min_samples_leaf": [1, 3, 5, 7]
        }
    }
}
